#############################################################
# ODM Default Logging Configuration File
#############################################################

# Reports logs to a file and the console
handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# The default file output is in ODM folder
# At runtime, %odm is replaced by the ODM root folder (eg. C:\ILOG\ODM25 or C:\ILOG\ODMPlayer25)
java.util.logging.FileHandler.pattern = %odm/odm.log
java.util.logging.FileHandler.append = true
# Specifies an approximate maximum amount to write (in bytes) to any one file
java.util.logging.FileHandler.limit = 1000000
# Specifies how many output files to cycle through 
java.util.logging.FileHandler.count = 10
# use our formatter for high readability and additional execution context informations 
java.util.logging.FileHandler.formatter = ilog.odms.utils.logging.IloOdmsLogger$IloVerboseLogFormatter
java.util.logging.ConsoleHandler.formatter = ilog.odms.utils.logging.IloOdmsLogger$IloLogFormatter

# The Available log levels in descending order are:
#   SEVERE (highest value)
#   WARNING
#   INFO
#   CONFIG
#   FINE
#   FINER
#   FINEST (lowest value) 

# Limit the messages that are printed to the file to WARNING and above.
java.util.logging.FileHandler.level = WARNING
#java.util.logging.FileHandler.level = FINEST

# Limit the messages that are printed on the console to WARNING and above.
java.util.logging.ConsoleHandler.level = WARNING
#java.util.logging.ConsoleHandler.level = FINEST

ilog.odm.datasvc.level = WARNING
ilog.odms.dataserver.level = WARNING
ilog.odm.optimcore.level = FINEST
ilog.odm.ide.level = WARNING
ilog.odm.studio.level = WARNING
ilog.odm.utils.level = WARNING
ilog.odm.processingsvc.level = WARNING
